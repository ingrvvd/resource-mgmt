{"C:\\Users\\Acer\\OneDrive\\Pictures\\Saved Pictures\\Camera imports\\Camera Roll\\OneDrive\\Desktop\\resource-mgmt\\utils\\ResourceUtil.ts":{"path":"C:\\Users\\Acer\\OneDrive\\Pictures\\Saved Pictures\\Camera imports\\Camera Roll\\OneDrive\\Desktop\\resource-mgmt\\utils\\ResourceUtil.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":230}},"14":{"start":{"line":13,"column":19},"end":{"line":13,"column":48}},"15":{"start":{"line":14,"column":13},"end":{"line":14,"column":26}},"16":{"start":{"line":15,"column":28},"end":{"line":15,"column":56}},"17":{"start":{"line":16,"column":17},"end":{"line":25,"column":2}},"18":{"start":{"line":16,"column":31},"end":{"line":25,"column":2}},"19":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"20":{"start":{"line":18,"column":21},"end":{"line":18,"column":67}},"21":{"start":{"line":19,"column":8},"end":{"line":19,"column":32}},"22":{"start":{"line":22,"column":8},"end":{"line":22,"column":27}},"23":{"start":{"line":23,"column":8},"end":{"line":23,"column":18}},"24":{"start":{"line":26,"column":0},"end":{"line":26,"column":28}},"25":{"start":{"line":27,"column":18},"end":{"line":38,"column":2}},"26":{"start":{"line":27,"column":40},"end":{"line":38,"column":2}},"27":{"start":{"line":28,"column":4},"end":{"line":37,"column":5}},"28":{"start":{"line":29,"column":27},"end":{"line":29,"column":64}},"29":{"start":{"line":30,"column":8},"end":{"line":30,"column":32}},"30":{"start":{"line":31,"column":8},"end":{"line":31,"column":84}},"31":{"start":{"line":32,"column":8},"end":{"line":32,"column":26}},"32":{"start":{"line":35,"column":8},"end":{"line":35,"column":27}},"33":{"start":{"line":36,"column":8},"end":{"line":36,"column":18}},"34":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"35":{"start":{"line":40,"column":19},"end":{"line":40,"column":47}},"36":{"start":{"line":41,"column":0},"end":{"line":54,"column":2}},"37":{"start":{"line":55,"column":20},"end":{"line":72,"column":2}},"38":{"start":{"line":55,"column":34},"end":{"line":72,"column":2}},"39":{"start":{"line":56,"column":19},"end":{"line":56,"column":65}},"40":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"41":{"start":{"line":58,"column":8},"end":{"line":58,"column":64}},"42":{"start":{"line":60,"column":4},"end":{"line":71,"column":5}},"43":{"start":{"line":61,"column":55},"end":{"line":61,"column":63}},"44":{"start":{"line":62,"column":28},"end":{"line":62,"column":87}},"45":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"46":{"start":{"line":64,"column":12},"end":{"line":64,"column":54}},"47":{"start":{"line":66,"column":33},"end":{"line":66,"column":98}},"48":{"start":{"line":67,"column":8},"end":{"line":67,"column":54}},"49":{"start":{"line":70,"column":8},"end":{"line":70,"column":64}},"50":{"start":{"line":73,"column":0},"end":{"line":73,"column":34}},"51":{"start":{"line":74,"column":22},"end":{"line":82,"column":2}},"52":{"start":{"line":74,"column":36},"end":{"line":82,"column":2}},"53":{"start":{"line":75,"column":4},"end":{"line":81,"column":5}},"54":{"start":{"line":76,"column":29},"end":{"line":76,"column":80}},"55":{"start":{"line":77,"column":8},"end":{"line":77,"column":50}},"56":{"start":{"line":80,"column":8},"end":{"line":80,"column":56}},"57":{"start":{"line":83,"column":0},"end":{"line":83,"column":38}},"58":{"start":{"line":84,"column":25},"end":{"line":100,"column":2}},"59":{"start":{"line":84,"column":39},"end":{"line":100,"column":2}},"60":{"start":{"line":85,"column":4},"end":{"line":99,"column":5}},"61":{"start":{"line":86,"column":19},"end":{"line":86,"column":32}},"62":{"start":{"line":87,"column":26},"end":{"line":87,"column":77}},"63":{"start":{"line":88,"column":25},"end":{"line":88,"column":73}},"64":{"start":{"line":88,"column":54},"end":{"line":88,"column":72}},"65":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"66":{"start":{"line":90,"column":12},"end":{"line":90,"column":75}},"67":{"start":{"line":92,"column":8},"end":{"line":92,"column":46}},"68":{"start":{"line":95,"column":8},"end":{"line":95,"column":59}},"69":{"start":{"line":96,"column":8},"end":{"line":98,"column":11}},"70":{"start":{"line":101,"column":0},"end":{"line":101,"column":44}},"71":{"start":{"line":102,"column":0},"end":{"line":114,"column":2}},"72":{"start":{"line":115,"column":21},"end":{"line":152,"column":2}},"73":{"start":{"line":115,"column":35},"end":{"line":152,"column":2}},"74":{"start":{"line":116,"column":19},"end":{"line":116,"column":65}},"75":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"76":{"start":{"line":118,"column":8},"end":{"line":118,"column":64}},"77":{"start":{"line":120,"column":15},"end":{"line":120,"column":28}},"78":{"start":{"line":121,"column":17},"end":{"line":121,"column":30}},"79":{"start":{"line":122,"column":21},"end":{"line":122,"column":38}},"80":{"start":{"line":123,"column":24},"end":{"line":123,"column":44}},"81":{"start":{"line":124,"column":4},"end":{"line":151,"column":5}},"82":{"start":{"line":125,"column":29},"end":{"line":125,"column":80}},"83":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"84":{"start":{"line":127,"column":12},"end":{"line":127,"column":54}},"85":{"start":{"line":129,"column":30},"end":{"line":129,"column":86}},"86":{"start":{"line":129,"column":67},"end":{"line":129,"column":85}},"87":{"start":{"line":130,"column":8},"end":{"line":134,"column":9}},"88":{"start":{"line":131,"column":12},"end":{"line":133,"column":76}},"89":{"start":{"line":135,"column":32},"end":{"line":137,"column":26}},"90":{"start":{"line":138,"column":8},"end":{"line":138,"column":54}},"91":{"start":{"line":139,"column":8},"end":{"line":147,"column":9}},"92":{"start":{"line":140,"column":12},"end":{"line":140,"column":104}},"93":{"start":{"line":141,"column":12},"end":{"line":143,"column":70}},"94":{"start":{"line":146,"column":12},"end":{"line":146,"column":86}},"95":{"start":{"line":150,"column":8},"end":{"line":150,"column":78}},"96":{"start":{"line":153,"column":0},"end":{"line":153,"column":36}},"97":{"start":{"line":154,"column":23},"end":{"line":180,"column":2}},"98":{"start":{"line":154,"column":37},"end":{"line":180,"column":2}},"99":{"start":{"line":155,"column":4},"end":{"line":179,"column":5}},"100":{"start":{"line":156,"column":19},"end":{"line":156,"column":32}},"101":{"start":{"line":157,"column":29},"end":{"line":157,"column":80}},"102":{"start":{"line":158,"column":20},"end":{"line":158,"column":22}},"103":{"start":{"line":160,"column":8},"end":{"line":166,"column":9}},"104":{"start":{"line":160,"column":21},"end":{"line":160,"column":22}},"105":{"start":{"line":161,"column":36},"end":{"line":161,"column":51}},"106":{"start":{"line":162,"column":12},"end":{"line":165,"column":13}},"107":{"start":{"line":163,"column":16},"end":{"line":163,"column":26}},"108":{"start":{"line":164,"column":16},"end":{"line":164,"column":22}},"109":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"110":{"start":{"line":169,"column":12},"end":{"line":169,"column":76}},"111":{"start":{"line":172,"column":8},"end":{"line":172,"column":38}},"112":{"start":{"line":173,"column":8},"end":{"line":174,"column":16}},"113":{"start":{"line":175,"column":8},"end":{"line":175,"column":83}},"114":{"start":{"line":178,"column":8},"end":{"line":178,"column":81}},"115":{"start":{"line":181,"column":0},"end":{"line":181,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":17},"end":{"line":16,"column":18}},"loc":{"start":{"line":16,"column":31},"end":{"line":25,"column":2}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":16,"column":65},"end":{"line":16,"column":66}},"loc":{"start":{"line":16,"column":78},"end":{"line":25,"column":1}},"line":16},"9":{"name":"(anonymous_9)","decl":{"start":{"line":27,"column":18},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":40},"end":{"line":38,"column":2}},"line":27},"10":{"name":"(anonymous_10)","decl":{"start":{"line":27,"column":74},"end":{"line":27,"column":75}},"loc":{"start":{"line":27,"column":87},"end":{"line":38,"column":1}},"line":27},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":20},"end":{"line":55,"column":21}},"loc":{"start":{"line":55,"column":34},"end":{"line":72,"column":2}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":55,"column":68},"end":{"line":55,"column":69}},"loc":{"start":{"line":55,"column":81},"end":{"line":72,"column":1}},"line":55},"13":{"name":"(anonymous_13)","decl":{"start":{"line":74,"column":22},"end":{"line":74,"column":23}},"loc":{"start":{"line":74,"column":36},"end":{"line":82,"column":2}},"line":74},"14":{"name":"(anonymous_14)","decl":{"start":{"line":74,"column":70},"end":{"line":74,"column":71}},"loc":{"start":{"line":74,"column":83},"end":{"line":82,"column":1}},"line":74},"15":{"name":"(anonymous_15)","decl":{"start":{"line":84,"column":25},"end":{"line":84,"column":26}},"loc":{"start":{"line":84,"column":39},"end":{"line":100,"column":2}},"line":84},"16":{"name":"(anonymous_16)","decl":{"start":{"line":84,"column":73},"end":{"line":84,"column":74}},"loc":{"start":{"line":84,"column":86},"end":{"line":100,"column":1}},"line":84},"17":{"name":"(anonymous_17)","decl":{"start":{"line":88,"column":40},"end":{"line":88,"column":41}},"loc":{"start":{"line":88,"column":54},"end":{"line":88,"column":72}},"line":88},"18":{"name":"(anonymous_18)","decl":{"start":{"line":115,"column":21},"end":{"line":115,"column":22}},"loc":{"start":{"line":115,"column":35},"end":{"line":152,"column":2}},"line":115},"19":{"name":"(anonymous_19)","decl":{"start":{"line":115,"column":69},"end":{"line":115,"column":70}},"loc":{"start":{"line":115,"column":82},"end":{"line":152,"column":1}},"line":115},"20":{"name":"(anonymous_20)","decl":{"start":{"line":129,"column":53},"end":{"line":129,"column":54}},"loc":{"start":{"line":129,"column":67},"end":{"line":129,"column":85}},"line":129},"21":{"name":"(anonymous_21)","decl":{"start":{"line":154,"column":23},"end":{"line":154,"column":24}},"loc":{"start":{"line":154,"column":37},"end":{"line":180,"column":2}},"line":154},"22":{"name":"(anonymous_22)","decl":{"start":{"line":154,"column":71},"end":{"line":154,"column":72}},"loc":{"start":{"line":154,"column":84},"end":{"line":180,"column":1}},"line":154}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":57},"6":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{},"end":{}}],"line":63},"7":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{},"end":{}}],"line":89},"8":{"loc":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},{"start":{},"end":{}}],"line":117},"9":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{},"end":{}}],"line":126},"10":{"loc":{"start":{"line":130,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":134,"column":9}},{"start":{},"end":{}}],"line":130},"11":{"loc":{"start":{"line":162,"column":12},"end":{"line":165,"column":13}},"type":"if","locations":[{"start":{"line":162,"column":12},"end":{"line":165,"column":13}},{"start":{},"end":{}}],"line":162},"12":{"loc":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},{"start":{},"end":{}}],"line":168}},"s":{"0":1,"1":24,"2":0,"3":24,"4":24,"5":24,"6":0,"7":0,"8":0,"9":0,"10":48,"11":24,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":10,"19":10,"20":10,"21":10,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":1,"35":1,"36":1,"37":1,"38":3,"39":3,"40":3,"41":1,"42":2,"43":2,"44":2,"45":2,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":0,"57":1,"58":1,"59":2,"60":2,"61":2,"62":2,"63":2,"64":8,"65":2,"66":1,"67":1,"68":0,"69":0,"70":1,"71":1,"72":1,"73":4,"74":4,"75":4,"76":1,"77":3,"78":3,"79":3,"80":3,"81":3,"82":3,"83":3,"84":1,"85":2,"86":8,"87":2,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":0,"95":1,"96":1,"97":1,"98":3,"99":3,"100":3,"101":3,"102":3,"103":3,"104":3,"105":10,"106":10,"107":1,"108":1,"109":3,"110":2,"111":1,"112":1,"113":1,"114":0,"115":1},"f":{"0":24,"1":24,"2":0,"3":24,"4":24,"5":0,"6":48,"7":10,"8":10,"9":1,"10":1,"11":3,"12":3,"13":1,"14":1,"15":2,"16":2,"17":8,"18":4,"19":4,"20":8,"21":3,"22":3},"b":{"0":[1,1,1],"1":[24,0],"2":[24,24],"3":[24,24],"4":[24,24],"5":[1,2],"6":[1,1],"7":[1,1],"8":[1,3],"9":[1,2],"10":[1,1],"11":[1,9],"12":[2,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Acer/OneDrive/Pictures/Saved Pictures/Camera imports/Camera Roll/OneDrive/Desktop/resource-mgmt/utils/ResourceUtil.ts","sources":["C:/Users/Acer/OneDrive/Pictures/Saved Pictures/Camera imports/Camera Roll/OneDrive/Desktop/resource-mgmt/utils/ResourceUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { Resource } from \"../models/Resource\";\r\nimport { promises as fs } from \"fs\";\r\nimport { Request, Response } from \"express\";\r\nimport { check, ValidationChain, validationResult } from \"express-validator\";\r\n\r\nexport const readJSON = async (filename: string) => {\r\n  try {\r\n    const data = await fs.readFile(filename, \"utf8\");\r\n    return JSON.parse(data);\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const writeJSON = async (object: Resource, filename: string) => {\r\n  try {\r\n    const allObjects = await readJSON(filename);\r\n    allObjects.push(object);\r\n    await fs.writeFile(filename, JSON.stringify(allObjects), \"utf8\");\r\n    return allObjects;\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\nexport const addTourValidation = [\r\n  check(\"name\").trim().notEmpty().withMessage(\"Name is required.\"),\r\n\r\n  check(\"location\").trim().notEmpty().withMessage(\"Location is required.\"),\r\n\r\n  check(\"description\")\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage(\"Description is required.\"),\r\n\r\n  check(\"owner\")\r\n    .notEmpty()\r\n    .trim()\r\n    .isEmail()\r\n    .withMessage(\"Owner is required.\")\r\n    .matches(emailRegex)\r\n];\r\n\r\nexport const addResource = async (req: Request, res: Response) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).json({ errors: errors.array() });\r\n  }\r\n  try {\r\n    const { name, location, description, owner } = req.body;\r\n    const newResource = new Resource(name, location, description, owner);\r\n    if (name === \"fuck\") {\r\n      throw new Error(\"Simulated server error\");\r\n    }\r\n    const updatedResources = await writeJSON(\r\n      newResource,\r\n      \"utils/resources.json\"\r\n    );\r\n    return res.status(201).json(updatedResources);\r\n  } catch (error) {\r\n    return res.status(500).json({ message: \"cannot post\" });\r\n  }\r\n};\r\n\r\nexport const viewResources = async (req: Request, res: Response) => {\r\n  try {\r\n    const allResources = await readJSON(\"utils/resources.json\");\r\n    return res.status(200).json(allResources);\r\n  } catch (error) {\r\n    return res.status(500).json({ message: error });\r\n  }\r\n};\r\n\r\nexport const viewResourceById = async (req: Request, res: Response) => {\r\n  try {\r\n    const id = req.params.id;\r\n    const resources = await readJSON(\"utils/resources.json\");\r\n    const resource = resources.find((resource: Resource) => resource.id === id);\r\n\r\n    if (!resource) {\r\n      return res.status(404).json({ message: \"Resource not found\" });\r\n    }\r\n\r\n    return res.status(200).json(resource);\r\n  } catch (error) {\r\n    console.error(\"Error retrieving resource:\", error); // Helpful for debugging\r\n    return res.status(500).json({\r\n      message: \"An error occurred while retrieving the resource.\",\r\n    });\r\n  }\r\n};\r\nexport const updateResourceValidation = [\r\n  check(\"name\").optional().trim().notEmpty().withMessage(\"Name is required.\"),\r\n\r\n  check(\"location\")\r\n    .optional()\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage(\"Location is required.\"),\r\n\r\n  check(\"description\")\r\n    .optional()\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage(\"Description is required.\")\r\n];\r\n\r\nexport const editResource = async (req: Request, res: Response) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).json({ errors: errors.array() });\r\n  }\r\n  const id = req.params.id;\r\n  const name = req.body.name;\r\n  const location = req.body.location;\r\n  const description = req.body.description;\r\n  try {\r\n    const allResources = await readJSON(\"utils/resources.json\");\r\n    if (name === \"fuck\") {\r\n      throw new Error(\"Simulated server error\");\r\n    }\r\n\r\n    const resourceIndex = allResources.findIndex(\r\n      (resource: any) => resource.id === id\r\n    );\r\n    if (resourceIndex === -1) {\r\n      return res\r\n        .status(404)\r\n        .json({ message: \"Resource not found, unable to modify!\" });\r\n    }\r\n\r\n    const updatedResource = {\r\n      ...allResources[resourceIndex],\r\n      name,\r\n      location,\r\n      description\r\n    };\r\n    allResources[resourceIndex] = updatedResource;\r\n\r\n    try {\r\n      await fs.writeFile(\r\n        \"utils/resources.json\",\r\n        JSON.stringify(allResources),\r\n        \"utf8\"\r\n      );\r\n      return res\r\n        .status(200)\r\n        .json({ message: \"Resource modified successfully!\" });\r\n    } catch (writeError) {\r\n      return res.status(400).json({ message: \"Failed to save modifications.\" });\r\n    }\r\n  } catch (error) {\r\n    return res.status(500).json({ message: \"Failed to read resources.\" });\r\n  }\r\n};\r\n\r\nexport const deleteResource = async (req: Request, res: Response) => {\r\n  try {\r\n    const id = req.params.id;\r\n    const allResources = await readJSON(\"utils/resources.json\");\r\n    let index = -1;\r\n\r\n    // Find the index of the resource to delete\r\n    for (let i = 0; i < allResources.length; i++) {\r\n      const currentResource = allResources[i];\r\n      if (currentResource.id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Handle the resource not found\r\n    if (index === -1) {\r\n      return res.status(404).json({ message: \"Resource not found!\" });\r\n    }\r\n\r\n    // Remove the resource and update the file\r\n    allResources.splice(index, 1);\r\n    await fs.writeFile(\r\n      \"utils/resources.json\",\r\n      JSON.stringify(allResources, null, 2), // Use indentation for better readability\r\n      \"utf8\"\r\n    );\r\n\r\n    return res.status(200).json({ message: \"Resource deleted successfully!\" });\r\n  } catch (error) {\r\n    return res.status(500).json({ message: \"Internal server error\", error });\r\n  }\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"842d52a957ae3c6b32842e30b1b7bea49bc31444","contentHash":"ad248ee875e2d5cfb1656c04a41d95d07c1629778738274e527c4915a95fe84e"}}