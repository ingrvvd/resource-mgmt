{"version":3,"file":"C:/Users/Acer/OneDrive/Pictures/Saved Pictures/Camera imports/Camera Roll/OneDrive/Desktop/resource-mgmt/utils/ResourceUtil.ts","sources":["C:/Users/Acer/OneDrive/Pictures/Saved Pictures/Camera imports/Camera Roll/OneDrive/Desktop/resource-mgmt/utils/ResourceUtil.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iDAA8C;AAC9C,2BAAoC;AAEpC,yDAA6E;AAEtE,MAAM,QAAQ,GAAG,CAAO,QAAgB,EAAE,EAAE;IACjD,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,aAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,MAAM,GAAG,CAAC;IACZ,CAAC;AACH,CAAC,CAAA,CAAC;AARW,QAAA,QAAQ,YAQnB;AAEK,MAAM,SAAS,GAAG,CAAO,MAAgB,EAAE,QAAgB,EAAE,EAAE;IACpE,IAAI,CAAC;QACH,MAAM,UAAU,GAAG,MAAM,IAAA,gBAAQ,EAAC,QAAQ,CAAC,CAAC;QAC5C,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,aAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,CAAC;QACjE,OAAO,UAAU,CAAC;IACpB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,MAAM,GAAG,CAAC;IACZ,CAAC;AACH,CAAC,CAAA,CAAC;AAVW,QAAA,SAAS,aAUpB;AAEF,MAAM,UAAU,GAAG,4BAA4B,CAAC;AACnC,QAAA,iBAAiB,GAAG;IAC/B,IAAA,yBAAK,EAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC;IAEhE,IAAA,yBAAK,EAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,uBAAuB,CAAC;IAExE,IAAA,yBAAK,EAAC,aAAa,CAAC;SACjB,IAAI,EAAE;SACN,QAAQ,EAAE;SACV,WAAW,CAAC,0BAA0B,CAAC;IAE1C,IAAA,yBAAK,EAAC,OAAO,CAAC;SACX,QAAQ,EAAE;SACV,IAAI,EAAE;SACN,OAAO,EAAE;SACT,WAAW,CAAC,oBAAoB,CAAC;SACjC,OAAO,CAAC,UAAU,CAAC;CACvB,CAAC;AAEK,MAAM,WAAW,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC/D,MAAM,MAAM,GAAG,IAAA,oCAAgB,EAAC,GAAG,CAAC,CAAC;IACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;QACtB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,IAAI,CAAC;QACH,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QACxD,MAAM,WAAW,GAAG,IAAI,mBAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QACrE,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC5C,CAAC;QACD,MAAM,gBAAgB,GAAG,MAAM,IAAA,iBAAS,EACtC,WAAW,EACX,sBAAsB,CACvB,CAAC;QACF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAChD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;IAC1D,CAAC;AACH,CAAC,CAAA,CAAC;AAnBW,QAAA,WAAW,eAmBtB;AAEK,MAAM,aAAa,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjE,IAAI,CAAC;QACH,MAAM,YAAY,GAAG,MAAM,IAAA,gBAAQ,EAAC,sBAAsB,CAAC,CAAC;QAC5D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;IAClD,CAAC;AACH,CAAC,CAAA,CAAC;AAPW,QAAA,aAAa,iBAOxB;AAEK,MAAM,gBAAgB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACpE,IAAI,CAAC;QACH,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,SAAS,GAAG,MAAM,IAAA,gBAAQ,EAAC,sBAAsB,CAAC,CAAC;QACzD,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,QAAkB,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAE5E,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;QACjE,CAAC;QAED,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC,CAAC,wBAAwB;QAC5E,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,kDAAkD;SAC5D,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAA,CAAC;AAjBW,QAAA,gBAAgB,oBAiB3B;AACW,QAAA,wBAAwB,GAAG;IACtC,IAAA,yBAAK,EAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC;IAE3E,IAAA,yBAAK,EAAC,UAAU,CAAC;SACd,QAAQ,EAAE;SACV,IAAI,EAAE;SACN,QAAQ,EAAE;SACV,WAAW,CAAC,uBAAuB,CAAC;IAEvC,IAAA,yBAAK,EAAC,aAAa,CAAC;SACjB,QAAQ,EAAE;SACV,IAAI,EAAE;SACN,QAAQ,EAAE;SACV,WAAW,CAAC,0BAA0B,CAAC;CAC3C,CAAC;AAEK,MAAM,YAAY,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAChE,MAAM,MAAM,GAAG,IAAA,oCAAgB,EAAC,GAAG,CAAC,CAAC;IACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;QACtB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACzB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3B,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACzC,IAAI,CAAC;QACH,MAAM,YAAY,GAAG,MAAM,IAAA,gBAAQ,EAAC,sBAAsB,CAAC,CAAC;QAC5D,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,aAAa,GAAG,YAAY,CAAC,SAAS,CAC1C,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CACtC,CAAC;QACF,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE,CAAC;YACzB,OAAO,GAAG;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC,CAAC;QAChE,CAAC;QAED,MAAM,eAAe,mCAChB,YAAY,CAAC,aAAa,CAAC,KAC9B,IAAI;YACJ,QAAQ;YACR,WAAW,GACZ,CAAC;QACF,YAAY,CAAC,aAAa,CAAC,GAAG,eAAe,CAAC;QAE9C,IAAI,CAAC;YACH,MAAM,aAAE,CAAC,SAAS,CAChB,sBAAsB,EACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAC5B,MAAM,CACP,CAAC;YACF,OAAO,GAAG;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,OAAO,EAAE,iCAAiC,EAAE,CAAC,CAAC;QAC1D,CAAC;QAAC,OAAO,UAAU,EAAE,CAAC;YACpB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC,CAAC;IACxE,CAAC;AACH,CAAC,CAAA,CAAC;AA/CW,QAAA,YAAY,gBA+CvB;AAEK,MAAM,cAAc,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAClE,IAAI,CAAC;QACH,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,YAAY,GAAG,MAAM,IAAA,gBAAQ,EAAC,sBAAsB,CAAC,CAAC;QAC5D,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QAEf,2CAA2C;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7C,MAAM,eAAe,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,eAAe,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC;gBAC9B,KAAK,GAAG,CAAC,CAAC;gBACV,MAAM;YACR,CAAC;QACH,CAAC;QAED,gCAAgC;QAChC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACjB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;QAClE,CAAC;QAED,0CAA0C;QAC1C,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,MAAM,aAAE,CAAC,SAAS,CAChB,sBAAsB,EACtB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,yCAAyC;QAChF,MAAM,CACP,CAAC;QAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC,CAAC;IAC7E,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,KAAK,EAAE,CAAC,CAAC;IAC3E,CAAC;AACH,CAAC,CAAA,CAAC;AAhCW,QAAA,cAAc,kBAgCzB","sourcesContent":["import { Resource } from \"../models/Resource\";\r\nimport { promises as fs } from \"fs\";\r\nimport { Request, Response } from \"express\";\r\nimport { check, ValidationChain, validationResult } from \"express-validator\";\r\n\r\nexport const readJSON = async (filename: string) => {\r\n  try {\r\n    const data = await fs.readFile(filename, \"utf8\");\r\n    return JSON.parse(data);\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const writeJSON = async (object: Resource, filename: string) => {\r\n  try {\r\n    const allObjects = await readJSON(filename);\r\n    allObjects.push(object);\r\n    await fs.writeFile(filename, JSON.stringify(allObjects), \"utf8\");\r\n    return allObjects;\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\nexport const addTourValidation = [\r\n  check(\"name\").trim().notEmpty().withMessage(\"Name is required.\"),\r\n\r\n  check(\"location\").trim().notEmpty().withMessage(\"Location is required.\"),\r\n\r\n  check(\"description\")\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage(\"Description is required.\"),\r\n\r\n  check(\"owner\")\r\n    .notEmpty()\r\n    .trim()\r\n    .isEmail()\r\n    .withMessage(\"Owner is required.\")\r\n    .matches(emailRegex)\r\n];\r\n\r\nexport const addResource = async (req: Request, res: Response) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).json({ errors: errors.array() });\r\n  }\r\n  try {\r\n    const { name, location, description, owner } = req.body;\r\n    const newResource = new Resource(name, location, description, owner);\r\n    if (name === \"fuck\") {\r\n      throw new Error(\"Simulated server error\");\r\n    }\r\n    const updatedResources = await writeJSON(\r\n      newResource,\r\n      \"utils/resources.json\"\r\n    );\r\n    return res.status(201).json(updatedResources);\r\n  } catch (error) {\r\n    return res.status(500).json({ message: \"cannot post\" });\r\n  }\r\n};\r\n\r\nexport const viewResources = async (req: Request, res: Response) => {\r\n  try {\r\n    const allResources = await readJSON(\"utils/resources.json\");\r\n    return res.status(200).json(allResources);\r\n  } catch (error) {\r\n    return res.status(500).json({ message: error });\r\n  }\r\n};\r\n\r\nexport const viewResourceById = async (req: Request, res: Response) => {\r\n  try {\r\n    const id = req.params.id;\r\n    const resources = await readJSON(\"utils/resources.json\");\r\n    const resource = resources.find((resource: Resource) => resource.id === id);\r\n\r\n    if (!resource) {\r\n      return res.status(404).json({ message: \"Resource not found\" });\r\n    }\r\n\r\n    return res.status(200).json(resource);\r\n  } catch (error) {\r\n    console.error(\"Error retrieving resource:\", error); // Helpful for debugging\r\n    return res.status(500).json({\r\n      message: \"An error occurred while retrieving the resource.\",\r\n    });\r\n  }\r\n};\r\nexport const updateResourceValidation = [\r\n  check(\"name\").optional().trim().notEmpty().withMessage(\"Name is required.\"),\r\n\r\n  check(\"location\")\r\n    .optional()\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage(\"Location is required.\"),\r\n\r\n  check(\"description\")\r\n    .optional()\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage(\"Description is required.\")\r\n];\r\n\r\nexport const editResource = async (req: Request, res: Response) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).json({ errors: errors.array() });\r\n  }\r\n  const id = req.params.id;\r\n  const name = req.body.name;\r\n  const location = req.body.location;\r\n  const description = req.body.description;\r\n  try {\r\n    const allResources = await readJSON(\"utils/resources.json\");\r\n    if (name === \"fuck\") {\r\n      throw new Error(\"Simulated server error\");\r\n    }\r\n\r\n    const resourceIndex = allResources.findIndex(\r\n      (resource: any) => resource.id === id\r\n    );\r\n    if (resourceIndex === -1) {\r\n      return res\r\n        .status(404)\r\n        .json({ message: \"Resource not found, unable to modify!\" });\r\n    }\r\n\r\n    const updatedResource = {\r\n      ...allResources[resourceIndex],\r\n      name,\r\n      location,\r\n      description\r\n    };\r\n    allResources[resourceIndex] = updatedResource;\r\n\r\n    try {\r\n      await fs.writeFile(\r\n        \"utils/resources.json\",\r\n        JSON.stringify(allResources),\r\n        \"utf8\"\r\n      );\r\n      return res\r\n        .status(200)\r\n        .json({ message: \"Resource modified successfully!\" });\r\n    } catch (writeError) {\r\n      return res.status(400).json({ message: \"Failed to save modifications.\" });\r\n    }\r\n  } catch (error) {\r\n    return res.status(500).json({ message: \"Failed to read resources.\" });\r\n  }\r\n};\r\n\r\nexport const deleteResource = async (req: Request, res: Response) => {\r\n  try {\r\n    const id = req.params.id;\r\n    const allResources = await readJSON(\"utils/resources.json\");\r\n    let index = -1;\r\n\r\n    // Find the index of the resource to delete\r\n    for (let i = 0; i < allResources.length; i++) {\r\n      const currentResource = allResources[i];\r\n      if (currentResource.id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Handle the resource not found\r\n    if (index === -1) {\r\n      return res.status(404).json({ message: \"Resource not found!\" });\r\n    }\r\n\r\n    // Remove the resource and update the file\r\n    allResources.splice(index, 1);\r\n    await fs.writeFile(\r\n      \"utils/resources.json\",\r\n      JSON.stringify(allResources, null, 2), // Use indentation for better readability\r\n      \"utf8\"\r\n    );\r\n\r\n    return res.status(200).json({ message: \"Resource deleted successfully!\" });\r\n  } catch (error) {\r\n    return res.status(500).json({ message: \"Internal server error\", error });\r\n  }\r\n};"]}